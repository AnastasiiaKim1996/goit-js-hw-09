{"mappings":"gfAEA,IAAAA,EAAAC,EAAA,SAIMC,EAAYC,SAASC,cAAc,mBAKzC,SAASC,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MAC3BC,EAAgBC,KAAKC,SAAW,GAatC,OADgB,IAAIC,SAVD,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MAdSL,SAASC,cAAc,SAE/BY,iBAAiB,UAmBzB,SAAsBC,GACpBA,EAAMC,iBACNhB,EAAUiB,UAAW,EAErB,IAAMC,EAAOH,EAAMI,OACbC,EAAaC,SAASH,EAAKZ,MAAMgB,OACjCC,EAAYF,SAASH,EAAKM,KAAKF,OAC/BG,EAAcJ,SAASH,EAAKQ,OAAOJ,OAEzCT,YAAW,WACTb,EAAUiB,UAAW,IACpBQ,EAAcF,EAAYH,GAE7B,IAAK,IAAIO,EAAW,EAAGA,EAAWF,EAAaE,GAAY,EAAG,CAC5D,IAAMC,EAAQR,EAAaG,EAAYI,EAEvCxB,EAAc,CAAEE,SAAAsB,EAAUrB,MAAAsB,IAC1BzB,EAAc,CAAEE,SAAAsB,EAAUrB,MAAAsB,IACvBC,MAAK,SAAAzB,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBR,EAAAgC,OAAOC,QAAQ,uBAA4CC,OAAnB3B,EAAW,EAAE,QAAY2B,OAAN1B,EAAM,UAElE2B,OAAM,SAAA7B,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBR,EAAAgC,OAAOI,QAAQ,uBAA0CF,OAAnB3B,EAAW,EAAE,QAAY2B,OAAN1B,EAAM,c","sources":["src/js/03-promises.js"],"sourcesContent":["// - import - //\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// --- promise --- //\n\nconst buttonRef = document.querySelector(\"[type='submit']\");\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const newPromise = (resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  };\n\n  const promise = new Promise(newPromise);\n  return promise;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  buttonRef.disabled = true;\n\n  const form = event.target;\n  const delayValue = parseInt(form.delay.value);\n  const stepValue = parseInt(form.step.value);\n  const amountValue = parseInt(form.amount.value);\n\n  setTimeout(() => {\n    buttonRef.disabled = false;\n  }, amountValue * stepValue + delayValue);\n\n  for (let position = 0; position < amountValue; position += 1) {\n    const delay = delayValue + stepValue * position;\n\n    createPromise({ position, delay });\n    createPromise({ position, delay })\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position + 1} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise  ${position + 1} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$buttonRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","param","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","disabled","form","target","delayValue","parseInt","value","stepValue","step","amountValue","amount","position1","delay1","then","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.502fe27d.js.map"}